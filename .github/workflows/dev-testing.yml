name: Venture-Scope Testing

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Using 3.10 since that appears to be what your dev environment uses
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
        pip install fastapi httpx pandas plotly langchain-core openai pytest-mock snowflake-connector-python python-dotenv
        
    - name: Create mock environment variables for testing
      run: |
        echo "AWS_ACCESS_KEY_ID=test" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=test" >> $GITHUB_ENV
        echo "AWS_BUCKET_NAME=test-bucket" >> $GITHUB_ENV
        echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=test-key" >> $GITHUB_ENV
        echo "SNOWFLAKE_USER=test" >> $GITHUB_ENV
        echo "SNOWFLAKE_PASSWORD=test" >> $GITHUB_ENV
        echo "SNOWFLAKE_ACCOUNT=test" >> $GITHUB_ENV
        echo "SNOWFLAKE_WAREHOUSE=test" >> $GITHUB_ENV
        echo "SNOWFLAKE_DATABASE=test_db" >> $GITHUB_ENV
        echo "SNOWFLAKE_ROLE=test_role" >> $GITHUB_ENV
    
    - name: Display directory structure for debugging
      run: |
        find backend -type f -name "*.py" | sort
        
    - name: Verify module structure
      run: |
        ls -la backend/app
        python -c "import sys; sys.path.append('$GITHUB_WORKSPACE'); import backend; print(dir(backend)); import backend.app; print(dir(backend.app));" || true
        
    - name: Run unit tests
      run: |
        cd $GITHUB_WORKSPACE
        PYTHONPATH=$GITHUB_WORKSPACE pytest backend/app/test_data/test_all.py -v
        
    - name: Run integration tests
      run: |
        cd $GITHUB_WORKSPACE
        PYTHONPATH=$GITHUB_WORKSPACE pytest backend/app/integrations/test.py -v --log-cli-level=DEBUG

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit
        
    - name: Run Bandit security scanner
      run: |
        bandit -r backend/ -f json -o bandit-results.json || true
        
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: bandit-results.json
        if-no-files-found: warn